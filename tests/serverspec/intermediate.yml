---
- hosts: localhost
  pre_tasks:
    - name: Include ansible-role-cfssl (root)
      include_role:
        name: ansible-role-cfssl
      vars:
        cfssl_vars: "{{ project_root_ca }}"

    - name: Include ansible-role-cfssl (development)
      include_role:
        name: ansible-role-cfssl
      vars:
        cfssl_vars: "{{ project_development_ca }}"

    - name: Include ansible-role-cfssl (production)
      include_role:
        name: ansible-role-cfssl
      vars:
        cfssl_vars: "{{ project_production_ca }}"
  vars:

    # An example to:
    #
    # * Create a root CA
    # * Create two intermediate root CAs, development and production
    # * sign two sets of same list of certificates with each key of two CAs
    #
    # inspired by https://jite.eu/2019/2/6/ca-with-cfssl/

    # root CA
    os_project_ca_dir:
      FreeBSD: /usr/local/etc/cfssl
      OpenBSD: /etc/cfssl
      Debian: /etc/cfssl
    project_ca_dir: "{{ os_project_ca_dir[ansible_os_family] }}"
    project_root_ca_dir: "{{ project_ca_dir }}/root"
    project_root_ca:
      cfssl_ca_root_dir: "{{ project_root_ca_dir }}"
      cfssl_ca_public_key_file: "{{ project_root_ca_dir }}/ca.pem"
      cfssl_ca_secret_key_file: "{{ project_root_ca_dir }}/ca-key.pem"
      cfssl_ca_csr_file: "{{ project_root_ca_dir }}/ca.csr"
      cfssl_ca_config_file: "{{ project_root_ca_dir }}/ca-config.json"

      cfssl_ca_csr_config:
        CN: Test root CA
        key:
          algo: rsa
          size: 2048
        names:
          - C: US
            ST: California
            L: San Francisco
            O: example.org
      cfssl_ca_config:
        signing:
          default:
            expiry: 17520h
            usages:
              - signing
              - key encipherment
              - cert sign
              - crt sign
          profiles:
            development:
              ca_constraint:
                is_ca: true
                max_path_len: 0
                max_path_len_zero: true
              expiry: 4320h
              usages:
                - signing
                - key encipherment
                - cert sign
                - crt sign
            production:
              ca_constraint:
                is_ca: true
                max_path_len: 0
                max_path_len_zero: true
              expiry: 4320h
              usages:
                - signing
                - key encipherment
                - cert sign
                - crt sign
      cfssl_certs:
        - name: production.json
          profile: production
          owner: "{{ cfssl_user }}"
          json:
            CN: Test production CA
            key:
              algo: rsa
              size: 2048
        - name: development.json
          profile: development
          owner: "{{ cfssl_user }}"
          json:

            CN: Test development CA
            key:
              algo: rsa
              size: 2048

    # create two CAs
    project_development_ca_dir: "{{ project_ca_dir }}/development"
    project_development_ca:
      cfssl_ca_root_dir: "{{ project_development_ca_dir }}"
      cfssl_ca_public_key_file: "{{ project_root_ca_dir }}/certs/Test_development_CA.pem"
      cfssl_ca_secret_key_file: "{{ project_root_ca_dir }}/certs/Test_development_CA-key.pem"
      cfssl_ca_csr_file: "{{ project_root_ca_dir }}/certs/Test_development_CA.csr"
      cfssl_ca_config_file: "{{ project_development_ca_dir }}/ca-config.json"
      cfssl_ca_config: "{{ project_cfssl_ca_config }}"
      cfssl_certs: "{{ project_cfssl_certs }}"

    project_production_ca_dir: "{{ project_ca_dir }}/production"
    project_production_ca:
      cfssl_ca_root_dir: "{{ project_production_ca_dir }}"
      cfssl_ca_public_key_file: "{{ project_root_ca_dir }}/certs/Test_production_CA.pem"
      cfssl_ca_secret_key_file: "{{ project_root_ca_dir }}/certs/Test_production_CA-key.pem"
      cfssl_ca_csr_file: "{{ project_root_ca_dir }}/certs/Test_production_CA.csr"
      cfssl_ca_config_file: "{{ project_production_ca_dir }}/ca-config.json"
      cfssl_ca_config: "{{ project_cfssl_ca_config }}"
      cfssl_certs: "{{ project_cfssl_certs }}"

    # configuration for intermediate CAs
    project_cfssl_ca_config:
      signing:
        default:
          expiry: 17520h
          usages:
            - signing
            - key encipherment
            - cert sign
            - crt sign
        profiles:
          backend:
            expiry: 4320h
            usages:
              - signing
              - key encipherment
              - server auth
              - client auth
          agent:
            expiry: 4320h
            usages:
              - signing
              - key encipherment
              - client auth

    # a list of certificates to create
    project_cfssl_certs:
      - name: agent1.example.com.json
        # Subject Alternative Name, or SAN in short
        SAN: []
        profile: agent
        owner: nobody
        json:
          CN: agent1.example.com
          hosts:
            - ""
          key:
            algo: rsa
            size: 2048
      - name: backend-1.example.com.json
        SAN:
          - localhost
          - 127.0.0.1
          - 10.0.0.1
          - backend-1
        profile: backend
        json:
          CN: backend-1.example.com
          hosts:
            - ""
          key:
            algo: rsa
            size: 2048
      - name: backend-2.example.com.json
        SAN:
          - localhost
          - 127.0.0.1
          - 10.0.0.2
          - backend-2
        profile: backend
        json:
          CN: backend-2.example.com
          hosts:
            - ""
          key:
            algo: rsa
            size: 2048
      - name: backend-3.example.com.json
        SAN:
          - localhost
          - 127.0.0.1
          - 10.0.0.3
          - backend-3
        profile: backend
        json:
          CN: backend-3.example.com
          hosts:
            - ""
          key:
            algo: rsa
            size: 2048
